buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.spring.io/milestone/" }
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
        classpath "io.freefair.gradle:maven-plugin:${project.gradleMavenPluginVersion}"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local" }
    maven { url 'https://build.shibboleth.net/nexus/content/repositories/releases/' }
    maven { url "https://repo.spring.io/plugins-release/" }
    maven { url "https://repo.spring.io/milestone/" }
    maven { url "https://repo.spring.io/libs-milestone" }
    maven { url "https://repo.spring.io/snapshot" }
}


apply plugin: "io.freefair.war-overlay"
apply plugin: "war"
apply plugin: "org.springframework.boot"
apply plugin: "eclipse"
apply plugin: "idea"

def currentBranch = "master"
def currentVersion = "$System.env.casVersion"
if (!currentVersion.contains("RC")) {
    def matcher = currentVersion =~ /(\d+\.\d+\.).+/
    if (matcher.find()) {
        currentBranch = matcher.group(1) + "x"
    }
}

springBoot {
    mainClassName = "org.apereo.cas.CasSpringBootAdminServerWebApplication"
}

bootBuildImage {
    def tag = casVersion.endsWith("-SNAPSHOT") ? "latest" : "v${casVersion}"
    imageName = "apereo/cas-bootadmin-server:${tag}"
}

bootWar {
	if (project.hasProperty('executable')) {
    	launchScript()
	}
    entryCompression = ZipEntryCompression.STORED
	archiveName 'casbootadminserver.war'
    baseName 'casbootadminserver'

    excludeDevtools = false
    overlays {
        // https://docs.freefair.io/gradle-plugins/current/reference/#_io_freefair_war_overlay
        // Note: The "excludes" property is only for files in the war dependency.
        // If a jar is excluded from the war, it could be brought back into the final war as a dependency
        // of non-war dependencies. Those should be excluded via normal gradle dependency exclusions.
        cas {
            from "org.apereo.cas:cas-server-webapp-bootadmin-server:${project.casVersion}"
            provided = false
            //excludes = ["WEB-INF/lib/somejar-1.0*"]
        }
    }    
}

bootRun {
    sourceResources sourceSets.main
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    // add extra dependencies here
}
